package elr;

import elr.updater.VersionChecker;
import java.io.File;
import java.lang.reflect.Constructor;
import java.net.URL;
import java.net.URLClassLoader;
import javax.swing.JFrame;
import javax.swing.JProgressBar;

/**
 * Class used to contain all panels.
 * @author Infernage.
 */
public class MainFrame extends JFrame {
    private File launcher;
    private String OS;
    private String workDir;
    private String currJar;

    /**
     * Creates new form MainFrame.
     * @param os The OS where is being executed.
     * @param workD The working directory.
     * @param currentJ The current path of the jar.
     */
    public MainFrame(String os, String workD, String currentJ) {
        initComponents();
        println("Starting boot...");
        OS = os;
        workDir = workD;
        currJar = currentJ;
        launcher = new File(workDir, "ELauncher.jar");
    }
    
    public File getLauncher(){ return launcher; }
    
    public String getWorkingDir(){ return workDir; }
    
    public JProgressBar getBar(){ return jProgressBar1; }
    
    public String getOS(){ return OS; }
    
    public void load(){
        if (currJar.equals("NULL")){
            println("FATAL ERROR: Unable to recognize the current file from the launcher");
            return;
        }
        VersionChecker checker = new VersionChecker(this);
        checker.init();
        File downloaded = checker.start();
        if (downloaded == null) {
            println("FATAL ERROR: Restart the launcher and try again");
            return;
        } else if (!downloaded.equals(launcher)){
            launcher.delete();
            downloaded.renameTo(launcher);
        }
        println("Starting launcher system");
        try {
            Class loader = new URLClassLoader(new URL[] { launcher.toURI().toURL() })
                    .loadClass("elr.core.Loader");
            Constructor cons = loader.getConstructor(new Class[] { String[].class, JFrame.class, File.class });
            String arg[] = new String[] { OS, workDir, currJar };
            cons.newInstance(new Object[] { arg, this, launcher });
        } catch (Exception e) {
            println("FATAL ERROR: Failed to start the main launcher");
        }
    }
    
    public void printErr(Throwable t, String msg){
        String stack = "ERROR: " + msg + "\nEXCEPTION: ";
        for (StackTraceElement element : t.getStackTrace()) {
            stack += element.toString() + "\n";
        }
        print(stack);
    }
    
    public void println(String msg){
        print(msg + "\n");
    }
    
    public void print(String msg){
        initConsole.append(msg);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        initConsole = new javax.swing.JTextArea();
        jProgressBar1 = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        initConsole.setColumns(20);
        initConsole.setRows(5);
        jScrollPane1.setViewportView(initConsole);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea initConsole;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
