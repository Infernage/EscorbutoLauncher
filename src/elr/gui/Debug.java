/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package MLR.gui;
import Debugger.Parameters;
import MLR.InnerApi;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.PrintWriter;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.Iterator;
import javax.mail.Message;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
/**
 *
 * @author Infernage
 */
public class Debug extends javax.swing.JDialog {
    public boolean exited = false;
    /**
     * Creates new form Debug
     */
    public Debug(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
        this.setLocationRelativeTo(null);
    }
    public void reInit(){
        this.setLocationRelativeTo(null);
        jTextField1.setText("");
        jTextArea1.setText("");
        jButton1.setText("Send");
        jButton1.setEnabled(true);
        exited = false;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Nombre del error");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Descripción del error");

        jTextArea1.setColumns(20);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setWrapStyleWord(true);
        jScrollPane1.setViewportView(jTextArea1);

        jButton1.setText("Send");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField1)
                            .addComponent(jScrollPane1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(156, 156, 156)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 132, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(127, 127, 127))
            .addGroup(layout.createSequentialGroup()
                .addGap(139, 139, 139)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (jTextField1.getText().equals("") || jTextArea1.getText().equals("")){
            JOptionPane.showMessageDialog(null, "No has introducido ningún texto.");
            return;
        }
        String subject = "MineClient Ticket from " + System.getProperty("user.name") + ": " + 
                    jTextField1.getText();
        StringBuilder build = new StringBuilder("Message: ");
        build.append(jTextArea1.getText()).append("\n\nData:\n");
        Iterator it = System.getProperties().keySet().iterator();
        while (it.hasNext()){
            String tmp = (String) it.next();
            build.append(tmp + ": " + System.getProperty(tmp) + "\n");
        }
        build.append("\n\nERRORSTREAM\n").append(InnerApi.Init.error.err.toString());
        if (InnerApi.debug) System.out.println("[->Setting parameters<-]");
        Parameters par = new Parameters();
        Session ses = Session.getDefaultInstance(par.getPs());
        ses.setDebug(false);
        MimeMessage msg = new MimeMessage(ses);
        try{
            msg.setFrom(new InternetAddress(par.getF()));
            msg.addRecipient(Message.RecipientType.TO, new InternetAddress(par.getR()));
            if (InnerApi.debug) System.out.println("[->Adding recipients<-]");
            msg.setSubject(subject);
            msg.setText(build.toString());
            Transport t = ses.getTransport(par.getT());
            t.connect(par.getF(), par.getP());
            if (InnerApi.debug) System.out.println("[->Sending ticket<-]");
            t.sendMessage(msg, msg.getAllRecipients());
            t.close();
            if (InnerApi.debug) System.out.println("[->Done<-]");
            jButton1.setText("Enviado");
            jButton1.setEnabled(false);
        } catch (Exception ex){
            InnerApi.Init.error.setError(ex);
            if (InnerApi.debug) System.out.println("[->FAILED<-]");
            Calendar C = new GregorianCalendar();
            File log = new File(System.getProperty("user.home") + File.separator + "Desktop" + File.separator
                    + "MineClient_Error_" + C.get(Calendar.YEAR) + "-" + C.get(Calendar.MONTH) + "-" + 
                    C.get(Calendar.DAY_OF_MONTH) + "_" + C.get(Calendar.HOUR_OF_DAY) + "-" + C.get(Calendar.MINUTE)
                    + "-" + C.get(Calendar.SECOND) + ".log");
            PrintWriter pw = null;
            try{
                if (InnerApi.debug) System.out.println("[->Porting to a file<-]");
                if (!log.exists()){
                    log.createNewFile();
                }
                pw = new PrintWriter(log);
                pw.println(subject);
                pw.print(build.toString());
                pw.close();
            } catch (Exception e){
                InnerApi.Init.error.setError(e);
            }
            JOptionPane.showMessageDialog(null, "No se pudo enviar el mensaje.\nEl error se ha guardado "
                    + "en un fichero\nen el escritorio.");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
        // TODO add your handling code here:
        if (InnerApi.debug) System.out.println("[->Getting errors<-]");
        if (evt.getKeyCode() == KeyEvent.VK_CONTROL){
            String a = jTextField1.getText();
            if (a.equals("DEBUGMODE")){
                jTextArea1.setText("ERRORSTREAM:\n" + InnerApi.Init.error.err.toString());
            }
        }
    }//GEN-LAST:event_jTextField1KeyPressed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        if (InnerApi.debug) System.out.println("[->Exiting<-]");
        exited = true;
        reInit();
    }//GEN-LAST:event_formWindowClosing
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
