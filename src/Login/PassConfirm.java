package Login;



/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
import java.io.*;
import javax.swing.JOptionPane;
/**
 *
 * @author Reed
 */
public class PassConfirm extends javax.swing.JDialog {
    /**
     * Creates new form PassConfirm
     */
    public PassConfirm(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPasswordField1 = new javax.swing.JPasswordField();
        jPasswordField2 = new javax.swing.JPasswordField();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jLabel1.setText("Nueva contraseña:");

        jLabel2.setText("Confirmar contraseña:");

        jLabel3.setText("Palabra secreta:");

        jButton1.setText("Aceptar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel4.setText("Nombre de cuenta:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(98, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(98, 98, 98))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField2)
                    .addComponent(jPasswordField1)
                    .addComponent(jPasswordField2, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                    .addComponent(jTextField1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jPasswordField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //Botón de aceptar
        if ((jTextField2.getText() == null) || jTextField2.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Introduzca el nombre de cuenta");
            return;
        }
        boolean change = false;
        try{
            File tmp = new File(Sources.path(Sources.DirData + Sources.sep() + Sources.DirNM + Sources.sep()
                    + Vista2.getFile(jTextField2.getText() + "NM")));
            if (!tmp.exists()){
                if (!Sources.download(tmp.getAbsolutePath(), jTextField2.getText() + "NM.dat")){
                    JOptionPane.showMessageDialog(null, "La cuenta no existe o ha habido un problema al conectar"
                            + " con el servidor.");
                    return;
                }
            }
            BufferedReader bf = new BufferedReader(new FileReader(tmp));
            System.out.println(bf.readLine());
            String temp = bf.readLine();
            if (temp.equals("DEL")){
                JOptionPane.showMessageDialog(null, "La cuenta no existe o ha habido un problema al conectar "
                        + "con el servidor");
                bf.close();
                tmp.delete();
                return;
            } else if (temp.equals("MC") || temp.equals("MS")){
                String A = null;
                if (temp.equals("MS")){
                    A = "Mineshafter";
                } else if (temp.equals("MC")){
                    A = "Minecraft oficial";
                }
                JOptionPane.showMessageDialog(null, "Tu tipo de cuenta no permite cambiar la contraseña desde aquí.\n"
                        + "Tipo de cuenta: " + A);
                bf.close();
                return;
            }
            String A = null, B = null;
            bf.readLine();
            bf.readLine();
            //Nos quitamos de encima el nombre de usuario y la contraseña y vamos directamente a la palabra secreta
            StringECP crypt = new StringECP(Sources.pss);
            B = bf.readLine();
            A = crypt.decrypt(B);
            //Desencriptamos la palabra y comprobamos si es la escrita en el área de texto
            if (A.equals(jTextField1.getText())){
                change = true;
            }
            bf.close();
            if (change){
                //Si es la misma, comprobamos que la contraseña coincide
                String pass1 = new String (jPasswordField1.getPassword()), pass2 = new String (jPasswordField2.getPassword());
                if (pass1.equals(pass2)){
                    //Si coincide, obtenemos el nombre de usuario y lo desencriptamos
                    bf = new BufferedReader(new FileReader(tmp));
                    StringBuilder str = new StringBuilder(bf.readLine()).append("\n").append(bf.readLine()).append("\n");
                    str.append(bf.readLine()).append("\n").append(pass1).append("\n");
                    String tem;
                    while ((tem = bf.readLine()) != null){
                        str.append(tem).append("\n");
                    }
                    PrintWriter pw = new PrintWriter(tmp);
                    pw.print(str.toString());
                    pw.close();
                    bf.close();
                    Mainclass.synch(tmp);
                    JOptionPane.showMessageDialog(null, "La contraseña ha sido cambiada satisfactoriamente. Recuerda tu contraseña siempre.");
                    this.dispose();
                } else{
                    JOptionPane.showMessageDialog(null, "Las contraseñas no coinciden.");
                }
            } else{
                JOptionPane.showMessageDialog(null, "La palabra secreta no es correcta.");
            }
        } catch (IOException e){
            JOptionPane.showMessageDialog(null, "Error en el cambio de contraseña.");
            e.printStackTrace(Mainclass.err);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(final String args) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PassConfirm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PassConfirm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PassConfirm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PassConfirm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                PassConfirm dialog = new PassConfirm(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JPasswordField jPasswordField2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
