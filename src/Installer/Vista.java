package Installer;


import Login.Sources;
import java.io.*;
import javax.swing.*;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Reed
 */
/*public class Vista extends javax.swing.JFrame {
    private Worker work;//Installer
    private Unworker unwork;//Uninstaller
    private Restore restau;//Restorer
    private Login.Updater updater;
    private Connection initialite;
    /**
     * Creates new form Vista
     */
    /*public Vista() {
        initComponents();
        File mc = new File(Sources.path(Sources.Directory.DirMC));
        File data = new File(Sources.path(Sources.Directory.DirData()) + File.separator + Sources.Directory.DirInstance);
        if (!mc.exists() && (data.listFiles().length == 0)){
            jButton3.setEnabled(false);
        }
        jProgressBar1.setVisible(false);
    }
    //Método de cancelación
    public void retry(){
        jProgressBar1.setVisible(false);
        jProgressBar1.setValue(0);
        jProgressBar1.setMinimum(0);
        jButton1.setVisible(true);
        jButton1.setEnabled(true);
        jButton2.setEnabled(true);
        jButton2.setVisible(true);
        jButton3.setEnabled(true);
        jButton3.setVisible(true);
        jButton5.setEnabled(true);
        jButton5.setVisible(true);
        jButton6.setEnabled(true);
        jButton6.setVisible(true);
        jLabel2.setText("");
    }
    private void installSSP(boolean direct, String host){
        System.out.println("Creating new install thread");
        jLabel3.setText("");
        jProgressBar1.setVisible(true);
        work = Sources.Init.work;
        work.init(jLabel2, jProgressBar1, jButton1, direct);
        work.add(this);
        work.setInstallPath(Sources.Prop.getProperty("user.data") + File.separator + "Update" + 
                File.separator + Sources.Directory.Dirsrc + File.separator + Sources.Directory.Dirsrc + ".dat");
        jButton1.setEnabled(false);
        jButton2.setEnabled(false);
        jButton2.setVisible(false);
        jButton3.setEnabled(false);
        jButton3.setVisible(false);
        jButton5.setEnabled(false);
        jButton5.setVisible(false);
        jButton6.setEnabled(false);
        jButton6.setVisible(false);
        updater = new Login.Updater();
        updater.init(host, jProgressBar1, work);
        updater.start();
        Sources.Init.hilos.put("Updater", updater);
        jLabel2.setText("Descargando archivos...");
    }
    //Creamos el SwingWorker que trabajará en segundo plano. Y lo ejecutamos
    private void installSMP(boolean direct, String host){
        System.out.println("Creating new install thread");
        jLabel3.setText("");
        jProgressBar1.setVisible(true);
        work = Sources.Init.work;
        work.init(jLabel2, jProgressBar1, jButton1, direct);
        work.add(this);
        work.setInstallPath(Sources.Prop.getProperty("user.data") + File.separator + "Update" + 
                File.separator + Sources.Directory.Dirsrc + File.separator + Sources.Directory.Dirsrc + ".dat");
        jButton1.setEnabled(false);
        jButton2.setEnabled(false);
        jButton2.setVisible(false);
        jButton3.setEnabled(false);
        jButton3.setVisible(false);
        jButton5.setEnabled(false);
        jButton5.setVisible(false);
        jButton6.setEnabled(false);
        jButton6.setVisible(false);
        updater = new Login.Updater();
        updater.init(host, jProgressBar1, work);
        updater.start();
        Sources.Init.hilos.put("Updater", updater);
        jLabel2.setText("Descargando archivos...");
    }
    //Botón desinstalar que ejecuta Unworker
    private void uninstall() {
        jLabel3.setText("");
        unwork = ;
        unwork.init(jLabel2, jProgressBar1, jButton1, this);
        unwork.execute();
        jButton1.setEnabled(false);
        jButton2.setEnabled(false);
        jButton2.setVisible(false);
        jButton3.setEnabled(false);
        jButton3.setVisible(false);
        jButton5.setEnabled(false);
        jButton5.setVisible(false);
        jButton6.setEnabled(false);
        jButton6.setVisible(false);
    }
    //Botón restaurar que ejecuta el restaurador
    private void restauring(){
        jLabel3.setText("");
        restau = Sources.Init.rest;
        restau.init(this, jLabel2, jProgressBar1, jButton1);
        restau.execute();
        jButton1.setEnabled(false);
        jButton2.setEnabled(false);
        jButton2.setVisible(false);
        jButton3.setEnabled(false);
        jButton3.setVisible(false);
        jButton5.setEnabled(false);
        jButton5.setVisible(false);
        jButton6.setEnabled(false);
        jButton6.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    /*@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jSeparator1 = new javax.swing.JSeparator();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jButton1 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jProgressBar1 = new javax.swing.JProgressBar();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Instalador Minecraft");
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Instalación de Minecraft");

        jCheckBox1.setText("Crear acceso directo en el escritorio");

        jButton1.setText("Salir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jButton1.setBounds(330, 120, 60, 23);
        jLayeredPane1.add(jButton1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButton5.setText("Desinstalar");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jButton5.setBounds(0, 40, 100, 23);
        jLayeredPane1.add(jButton5, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButton2.setText("Instalar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jButton2.setBounds(0, 0, 100, 23);
        jLayeredPane1.add(jButton2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButton6.setText("Restaurar");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jButton6.setBounds(0, 80, 100, 23);
        jLayeredPane1.add(jButton6, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jProgressBar1.setForeground(new java.awt.Color(0, 204, 0));
        jProgressBar1.setOpaque(true);
        jProgressBar1.setString("");
        jProgressBar1.setStringPainted(true);
        jProgressBar1.setBounds(0, 30, 393, 25);
        jLayeredPane1.add(jProgressBar1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLabel3.setBounds(110, 0, 280, 20);
        jLayeredPane1.add(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLabel2.setBounds(0, 10, 385, 22);
        jLayeredPane1.add(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButton3.setText("Gestionar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jButton3.setBounds(0, 120, 100, 23);
        jLayeredPane1.add(jButton3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jSeparator1)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jCheckBox1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jLayeredPane1)
                            .add(layout.createSequentialGroup()
                                .add(0, 105, Short.MAX_VALUE)
                                .add(jLabel1)
                                .add(123, 123, 123)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel1)
                .add(18, 18, 18)
                .add(jCheckBox1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jSeparator1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLayeredPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //Botón Salir
        retry();
        this.setVisible(false);
        Login.Vista2.see.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        //Botón desinstalar
        int i = JOptionPane.showConfirmDialog(null, "¿Está seguro que desea desinstalar?");
        if (i == 0){
            System.out.println("Uninstalling...");
            uninstall();
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        //Botón restaurar
        System.out.println("Opening restauring system");
        restauring();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        jButton3.setText("Abriendo...");
        jButton3.setEnabled(false);
        final Vista vis = this;
        Thread t = new Thread("MultiMine"){
            @Override
            public void interrupt(){
                Installer.Vista.jButton3.setEnabled(true);
                Installer.Vista.jButton3.setText("Gestionar");
            }
            @Override
            public void run(){
                MultiMine mn = new MultiMine(vis, true);
                Installer.Vista.jButton3.setText("Abierto");
                mn.setVisible(true);
            }
        };
        t.start();
        Sources.Init.hilos.put("MultiMine", t);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        //Ejecutar instalación
        int i = JOptionPane.showConfirmDialog(null, "¿Quiere instalar Minecraft en su ordenador?");
        if (i == 0){
            boolean direct = jCheckBox1.isSelected();
            System.out.println("Installing...");
            initialite = new Connection(direct);
            initialite.start();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    /*public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        /*try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        /*java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Vista vist = new Vista();
                vist.setLocationRelativeTo(null);
                vist.setVisible(true);
            }
        });
    }
    private class Connection extends Thread{
        private boolean access;
        public Connection(boolean direct){
            access = direct;
        }
        @Override
        public void run(){
            File tmp;
            String[] options = new String[]{ "Singleplayer", "Multiplayer" };
            int i = JOptionPane.showOptionDialog(null, "¿Qué Minecraft desea instalar?", 
                    "Elección de Minecraft", JOptionPane.OK_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE, 
                    null, options, "Multiplayer");
            if (i == 0){
                String host = "";
                tmp = new File(Sources.Prop.getProperty("user.data") + File.separator + MultiMine.SP);
                tmp.deleteOnExit();
                Sources.Connection.download(tmp, MultiMine.SP);
                try {
                    BufferedReader bf = new BufferedReader(new FileReader(tmp));
                    host = bf.readLine();
                    bf.close();
                } catch (Exception ex) {
                    Sources.exception(ex, "Host not found");
                }
                installSSP(access, host);
            } else if (i == 1){
                String host = "";
                tmp = new File(Sources.Prop.getProperty("user.data") + File.separator + MultiMine.MP);
                tmp.deleteOnExit();
                Sources.Connection.download(tmp, MultiMine.MP);
                try{
                    BufferedReader bf = new BufferedReader(new FileReader(tmp));
                    host = bf.readLine();
                    bf.close();
                } catch (Exception ex){
                    Sources.exception(ex, "Host not found");
                }
                installSMP(access, host);
            } else if (i == -1){
                System.out.println("Cancelling...");
            } else{
                JOptionPane.showMessageDialog(null, "Opción no encontrada.", null, JOptionPane.ERROR_MESSAGE);
            }
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    public static javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables
}*/
